This is the test file for 2-matrix_divided.py
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix =[[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
>>> matrix_divided(matrix, 2.1)
[[0.48, 0.95, 1.43], [1.9, 2.38, 2.86]]
>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]
>>> matrix_divided(matrix, "hello")
Traceback (most recent call last):
	...
TypeError: div must be a number
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero
>>> matrix = [[2, 3, 4], [5, 6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size
>>> matrix = [[2, 3, 'hello'], [5, 6, 7]]
>>> matrix_divided(matrix, 2) # doctest: +NORMALIZE_WHITESPACE
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [2, 3, 4, 5, 6, 7]
>>> matrix_divided(matrix, 2) # doctest: +NORMALIZE_WHITESPACE
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = []
>>> matrix_divided(matrix, 2)	# doctest: +NORMALIZE_WHITESPACE
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[]]
>>> matrix_divided(matrix, 2)
[[]]
>>> matrix = {"town" : "ifetedo"}
>>> matrix_divided(matrix, 2) # doctest: +NORMALIZE_WHITESPACE
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
